services:
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - /data/es/kafkadata:/tmp/kafka-logs
    environment:
      TZ: ${TZ}
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@${KAFKA_HOST}:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
        max-file: "1"

  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      TZ: ${TZ}
      DYNAMIC_CONFIG_ENABLED: 'true'
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
        max-file: "1"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    restart: unless-stopped
    ports:
      - "9200:9200"
    volumes:
      - /data/es/esdata:/usr/share/elasticsearch/data
    environment:
      - TZ=${TZ}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - discovery.type=single-node
      - xpack.security.enabled=false
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
        max-file: "1"

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    restart: unless-stopped
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - TZ=${TZ}
      - LS_JAVA_OPTS=${ES_JAVA_OPTS}
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
        max-file: "1"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    restart: unless-stopped
    ports:
      - "5601:5601"
    volumes:
      - /data/es/kibanadata:/usr/share/kibana/data
    environment:
      - TZ=${TZ}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
        max-file: "1"